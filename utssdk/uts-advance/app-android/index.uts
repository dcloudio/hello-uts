
import { getUniActivity } from "io.dcloud.uts.android";
import Rect from "android.graphics.Rect";
import Color from "android.graphics.Color";
import TextView from "android.widget.TextView";
import FrameLayout from "android.widget.FrameLayout";
import ViewGroup from "android.view.ViewGroup";
import Gravity from "android.view.Gravity";

type TimerOptions = {
  start: (res: string) => void;
  work: (res: string) => void;
};



export function doTimerTask(opts:TimerOptions) {
	opts.start('doTimerTask start');
	setTimeout(function() {
		opts.work("doTimerTask work");
	}, 2000);
  
  return { name: "doTimerTask" };
}


export function doIntervalTask(opts:TimerOptions) {
	
	var taskRet = setInterval(function() {
		opts.work("doIntervalTask work");
	}, 2000);
	opts.start('doIntervalTask start');
  
  return { name: "doIntervalTask",taskId:taskRet};
}

export function clearIntervalTask(taskId:number) {
	
	clearInterval(taskId);
  
  return { name: "clearIntervalTask"};
}



class AddUIRunnable extends Runnable {

    override run():void {
		
        var textView = TextView(getUniActivity())
        textView.text = "HELLO WORLD"
        textView.textSize =  30.0.toFloat();
        textView.setBackgroundColor(Color.RED)
        textView.tag = "helloText"
        textView.gravity = Gravity.CENTER

        var decorView = getUniActivity()!.window.decorView;


        var frameContent = decorView.findViewById(android.R.id.content) as FrameLayout
        var layoutParam = FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT);
        layoutParam.topMargin = 200;

         frameContent.addView(textView,layoutParam)


    }
};

class RemoveUIRunnable extends Runnable {

    override run():void {

        var decorView = getUniActivity()!.window.decorView;
        var frameContent = decorView.findViewById(android.R.id.content) as FrameLayout

		var targetTV = frameContent.findViewWithTag("helloText") as TextView
        frameContent.removeView(targetTV)


    }
};


export function addViewToDecorView() {
    var uiRunable = AddUIRunnable();
    // 获取android环境下 宿主decorview的基本信息
    getUniActivity()!.runOnUiThread(uiRunable)

}

export function removeViewToDecorView() {
    var uiRunable = RemoveUIRunnable();
    // 获取android环境下 宿主decorview的基本信息
    getUniActivity()!.runOnUiThread(uiRunable)
}


