
export type ReadFileSuccessResult = {
	content : string
}

export type ReadFileFailResult = {
	/**
	 * 错误码
	 */
	errCode : number,
	/**
	 * 调用API的名称
	 */
	errSubject : string,
	/**
	 * 错误的详细信息
	 */
	errMsg : string,
}

export type ReadFileSuccessCallback = (res : ReadFileSuccessResult) => void

export type ReadFileFailCallback = (res : ReadFileFailResult) => void

export type ReadFileCompleteCallback = (res : any) => void



export type ReadFileOptions = {
	/**
	 * base64 / text
	 */
	type : string,
	/**
	 * 文件路径，支持相对地址和绝对地址
	 */
	path : string,
	/**
	 * 接口调用的回调函数
	 */
	success : ReadFileSuccessCallback | null,
	/**
	 * 接口调用失败的回调函数
	 */
	fail : ReadFileFailCallback | null,
	/**
	 * 接口调用结束的回调函数（调用成功、失败都会执行）
	 */
	complete : ReadFileCompleteCallback | null
}

/**
 * getFileContent
 * 获取文件内容，可以选择以 base64形式或者纯文本形式 编码
 */
export type ReadFile = (config : ReadFileOptions) => void;


export type WriteFileSuccessResult = {
	filePath : string,
}

export type WriteFileFailResult = {
	/**
	 * 错误码
	 */
	errCode : number,
	/**
	 * 调用API的名称
	 */
	errSubject : string,
	/**
	 * 错误的详细信息
	 */
	errMsg : string,
}

export type WriteFileSuccessCallback = (res : WriteFileSuccessResult) => void

export type WriteFileFailCallback = (res : WriteFileFailResult) => void

export type WriteFileCompleteCallback = (res : any) => void


export type WriteFileOptions = {
	/**
	 * 文件路径，只支持绝对地址
	 */
	path : string,
	/**
	 * 写入的文本内容
	 */
	content : string,
	/**
	 * 接口调用的回调函数
	 */
	success : WriteFileSuccessCallback | null,
	/**
	 * 接口调用失败的回调函数
	 */
	fail : WriteFileFailCallback | null,
	/**
	 * 接口调用结束的回调函数（调用成功、失败都会执行）
	 */
	complete : WriteFileCompleteCallback | null
}

/**
 * WriteFile
 * 写入文本
 */
export type WriteFile = (config : WriteFileOptions) => void;


interface Uni {
	readFile:ReadFile,
	writeFile:WriteFile
}