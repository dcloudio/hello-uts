

import {
	getUniActivity
} from "io.dcloud.uts.android";


import ActivityCompat from "androidx.core.app.ActivityCompat";
import Manifest from "android.Manifest";
import PackageManager from "android.content.pm.PackageManager";
import Build from "android.os.Build";
import FileObserver from "android.os.FileObserver";
import File from "java.io.File";
import Environment from "android.os.Environment";


/**
 * android 10版本以上通过文件监听实现
 */

class ScreenFileObserver extends FileObserver {

	allScreen: File;

	
	constructor(screenFile: string) {
		super(screenFile)
		this.allScreen = File(screenFile);
		console.log(allScreen);
	}

	override onEvent(event: Int, path?: String): void {
		
		
		if (event == FileObserver.CREATE) {
			let newPath: string = new File(allScreen, path!).path;
			let currentTime = System.currentTimeMillis();

			if ((currentTime - lastFileObserverTime) < 1000) {
				// 本地截屏行为比上一次超过1000ms,才认为是一个有效的时间
				return;
			}
			
			console.log(path);
			lastFileObserverTime = System.currentTimeMillis()
			listenOption.onImageCatchChange(newPath)
		}
	}
}



/**
 * android 10 版本使用的文件监听器
 */
let screenOB: ScreenFileObserver | null = null;

type onImageCatchOptions = {
	onImageCatchChange: (res: string) => void;
};

let listenOption: onImageCatchOptions = new onImageCatchOptions();

let lastFileObserverTime: number = 0;









/**
 * 请求权限
 */
export function requestPremission() {

	// 注册一个请求回调
	// 发起权限申请
	if (ActivityCompat.checkSelfPermission(getUniActivity()!, Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
		ActivityCompat.requestPermissions(getUniActivity()!, arrayOf(Manifest.permission.READ_EXTERNAL_STORAGE), 1001)
	}

	// 请求权限
	return { name: "requestPremission" };
}



/**
 * 开启截图监听
 */
export function onUserCaptureScreen(success: (res: string) => void) {
	listenOption.onImageCatchChange = success;
	

	// android 10 以上版本，使用监听文件的方式，更加可靠
	let directory_screenshot: File;

	let directory_pictures = File(Environment.getExternalStorageDirectory(), Environment.DIRECTORY_PICTURES);
	let directory_dcim = File(Environment.getExternalStorageDirectory(), Environment.DIRECTORY_DCIM);
	
	console.log(directory_pictures);
	console.log(directory_dcim);

	
	if (Build.MANUFACTURER.equals("Xiaomi", true)) {
		directory_screenshot = File(directory_dcim, "Screenshots");
	} else {
		directory_screenshot = File(directory_pictures, "Screenshots");
	}
	
	if (screenOB != null) {
		screenOB!.stopWatching()
	}
	screenOB = new ScreenFileObserver(directory_screenshot.path)
	screenOB!.startWatching()


}

/**
 * 关闭截屏监听
 */
export function offUserCaptureScreen(success: (res: string) => void) {

	// android 10以上，关闭监听通过移除文件监听器实现
	if (screenOB != null) {
		screenOB!.stopWatching()
		screenOB = null
	}
	lastFileObserverTime = 0;
	
	success("");
}









